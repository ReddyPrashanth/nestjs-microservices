version: '3.3'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ps-rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    hostname: ps-rabbit
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 20s
      retries: 5
    networks:
      - microservices
  
  api-gateway:
    build: 
      context: ./api-gateway
      dockerfile: Dockerfile
    image: microservices-api-gateway
    container_name: ps-api-gateway
    env_file:
      - ./api-gateway/.docker.env
    ports:
      - "3001:3001"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices
  
  user-service:
    build: 
      context: ./user-svc
      dockerfile: Dockerfile
    image: microservices-user-svc
    container_name: ps-user-svc
    env_file:
      - ./user-svc/.docker.env
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices

  monitoring-svc:
    build: 
      context: ./monitoring-svc
      dockerfile: Dockerfile
    image: microservices-monitoring-svc
    container_name: ps-monitoring-svc
    env_file:
      - ./monitoring-svc/.docker.env
    ports:
      - "3002:3002"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices

  store-svc:
    build: 
      context: ./store-svc
      dockerfile: Dockerfile
    image: microservices-store-svc
    container_name: ps-store-svc
    env_file:
      - ./store-svc/.docker.env
    ports:
      - "3004:3004"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices

networks:
  microservices:
    name: microservices
    driver: bridge